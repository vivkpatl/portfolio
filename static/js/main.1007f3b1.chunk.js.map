{"version":3,"sources":["Block.js","Info.js","Card.js","App.js","serviceWorker.js","index.js"],"names":["Block","react_default","a","createElement","className","this","props","header","title","description","children","Component","Info","href","target","rel","Card","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","cursor","handleClick","link","window","open","style","onClick","React","App","src_Block","src_Info","src_Card","id","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1007f3b1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Block extends Component {\r\n  \r\n  render() {\r\n    return(\r\n      <div className={ (this.props.header) ? \"Block-Header\" : \"Block-Content\" }>\r\n        <div>\r\n          <h1>\r\n            {this.props.title}\r\n          </h1>\r\n\r\n          <h2>\r\n            {this.props.description}\r\n          </h2>\r\n\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Block;","import React, { Component } from 'react';\r\n\r\nclass Info extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Info\">\r\n        <ul>\r\n          <li>\r\n            <a href=\"https://instagram.com/vivekstagram\" target=\"_blank\" rel=\"noopener noreferrer\">Instagram</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://linkedin.com/in/patelviv\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://github.com/vivkpatl\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://drive.google.com/file/d/1tI2evOsAA0bQUs6BwBD5BZjw42nt6QbZ/view?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">Resume</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\n\r\nclass Card extends React.Component {\r\n\r\n    state = {\r\n        cursor: 'pointer'\r\n    };\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        if (!props.link) {\r\n            this.state = {\r\n                cursor: 'default'\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    handleClick = () => {\r\n      if (this.props.link) {\r\n        window.open(this.props.link, '_blank');\r\n      }\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div style={this.state} className=\"Card\" onClick={this.handleClick}>\r\n                <h3>\r\n                    {this.props.title}\r\n                </h3>\r\n                <h4>\r\n                    {this.props.children}\r\n                </h4>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\n//Compiles the Sass CSS with the node-sass package \r\nimport './App.scss';\r\n\r\n\r\n//Components that I somehow wrote\r\nimport Block from './Block';\r\nimport Info from './Info';\r\nimport Card from './Card';\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"Top\">\r\n          <Block title=\"Vivek P. Patel\" description=\"Developer - Student\" header={true} />\r\n\r\n          \r\n          <Info />\r\n\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          \r\n          <Block title=\"Experience\" description=\"I have, in fact, held employment.\">\r\n          \r\n            <div className=\"row\">\r\n          \r\n              <div className=\"col-sm mb-3\">\r\n          \r\n                <Card title=\"Software Engineer Intern\">\r\n                  At <strong>Mavenir Systems, Inc.</strong>, I gained experience using WebRTC through RESTful APIs, implemented contextual text-to-speech according to accessibility specifications, and used Butterknife to bind views in an Android application.\r\n                </Card>\r\n          \r\n              </div>\r\n              \r\n              <div className=\"col-sm mb-3\">\r\n          \r\n                <Card title=\"Software Engineer Intern\">\r\n                  At <strong>Mavenir Systems, Inc.</strong>, I developed a means to aggregate T-Mobile customer\r\n                  phone lines under one email address using Firebase federated authentication, isolated 3 manufacturer-specific issues which were then backlogged (saving my team around 20 hours),\r\n                  developed 10 Android application screens using UI specifications, used JIRA to track issues and Bitbucket/Sourcetree for version control.\r\n                </Card>\r\n          \r\n              </div>\r\n          \r\n            </div>\r\n          \r\n          </Block>\r\n\r\n        </div>\r\n\r\n        <div className=\"container\" id=\"projects\">\r\n\r\n          <Block title=\"Projects\" description=\"My free time is free real estate.\">\r\n\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-sm mb-3\">\r\n\r\n                <Card title=\"SoleScrape\" link=\"https://github.com/vivkpatl/nodejs-scraping\">\r\n                  An application that scrapes prices of hyped-up sneakers from a friendly neighborhood apparel site. Build using an Express.js server, Puppeteer.js to capture JavaScript-rendered markup, and Cheerio.js to traverse said markup jQuery-style.\r\n                </Card>\r\n\r\n              </div>\r\n\r\n              <div className=\"col-sm mb-3\">\r\n\r\n                <Card title=\"Reactor\" link=\"https://gamejolt.com/games/reactor/246016\">\r\n                  I worked on the design of gameplay elements such as simple AI, and a wide array of control schemes. The game earned 1st place at the state level and 3rd place at the national level in TSA's Video Game Design event.\r\n                </Card>\r\n\r\n              </div>\r\n              \r\n              <div className=\"col-sm mb-3\">\r\n\r\n                <Card title=\"Clippr\" link=\"https://github.com/vivkpatl/tsa-software-2018-2019\">\r\n                  A desktop application for Windows that monitors the system clipboard and displays a history of copied items such as text and images. Used Electron.js, Sass, and HTML.\r\n                </Card>\r\n\r\n              </div>\r\n\r\n              <div className=\"w-100\">\r\n\r\n              </div>\r\n\r\n              <div className=\"col-sm mb-3\">\r\n\r\n                <Card title=\"PaperShares\" link=\"https://github.com/vivkpatl/MiyoshiFinalProject\">\r\n                  A mobile application that displays a stock price as a real time graph in a live wallpaper. Implemented JSON parsing of batch stock quotes from the AlphaVantage API.\r\n                </Card>\r\n\r\n              </div>\r\n\r\n              <div className=\"col-sm mb-3\">\r\n\r\n                <Card title=\"HDRNow\" >\r\n                  A Windows desktop app that implements a novel HDRi approximation algorithm using multiple exposures of a single image. Outputs are exportable as PNGs or Radiance (*.hdr) files. Built using UWP in C# and XAML.\r\n                </Card>\r\n\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </Block>\r\n\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          \r\n          <Block title=\"Skills\" description=\"I know stuff!\">\r\n            \r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-sm mb-3\">\r\n                \r\n                <Card title=\"HTML\">\r\n                  The classic.\r\n                </Card>\r\n\r\n              </div>\r\n\r\n              <div className=\"col-sm mb-3\">\r\n                \r\n                <Card title=\"CSS\">\r\n                  Also familiar with Sass syntax. I used it to build this site, actually.\r\n                </Card>\r\n\r\n              </div>\r\n\r\n              <div className=\"col-sm mb-3\">\r\n                \r\n                <Card title=\"Android\">\r\n                  Check out <a href=\"#projects\">PaperShares</a> above. It's for Android!\r\n                </Card>\r\n\r\n              </div>\r\n\r\n              <div className=\"w-100\">\r\n\r\n              </div>\r\n\r\n              <div className=\"col-sm mb-3\">\r\n                \r\n                <Card title=\"MongoDB\">\r\n                  Familiarity with basic operations through the MongoDB driver as well as object schemas with Mongoose.\r\n                </Card>\r\n\r\n              </div>\r\n\r\n              <div className=\"col-sm mb-3\">\r\n                \r\n                <Card title=\"Express.js\">\r\n                  Writing RESTful APIs! Serves as the backbone of <a href=\"#projects\">SoleScrape</a>.\r\n                </Card>\r\n\r\n              </div>\r\n\r\n              <div className=\"col-sm mb-3\">\r\n                \r\n                <Card title=\"React.js\">\r\n                  The proof? You're looking at it. Passing props, writing JSX, the whole shebang.\r\n                </Card>\r\n\r\n              </div>\r\n\r\n              <div className=\"col-sm mb-3\">\r\n                \r\n                <Card title=\"Node.js\">\r\n                  Used to build <a href=\"#projects\">Clippr</a> and <a href=\"#projects\">SoleScrape</a>. Fun stuff!\r\n                </Card>\r\n\r\n              </div>\r\n\r\n              <div className=\"w-100\">\r\n                \r\n              </div>\r\n\r\n              <div className=\"col-sm mb-3\">\r\n                \r\n                <Card title=\"Electron.js\">\r\n                  Basic knowledge of building desktop applications using a typical web stack. Check out <a href=\"#projects\">Clippr</a>'s source code!\r\n                </Card>\r\n\r\n              </div>\r\n\r\n              <div className=\"col-sm mb-3\">\r\n                \r\n                <Card title=\"C++/C#\">\r\n                  Built some games using SFML in C++, and prototyped mathematical pipelines in C# on Windows.\r\n                </Card>\r\n\r\n              </div>\r\n\r\n            </div>\r\n          \r\n          </Block>\r\n        \r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          \r\n          <Block title=\"Education\" description=\"Pieces of paper. Some are in progress.\">\r\n            \r\n            <div className=\"row\">\r\n\r\n              <div className=\"col mb-3\">\r\n                \r\n                <Card title=\"University of Washington\" link=\"https://cs.washington.edu/\">\r\n                  Working towards a <strong>B.S. in Computer Science</strong> with a focus in Data Science at the <strong>Paul G. Allen School of Computer Science & Engineering</strong>. Projected graduation in June 2023.\r\n                </Card>\r\n\r\n              </div>\r\n\r\n              <div className=\"w-100\">\r\n\r\n              </div>\r\n\r\n              <div className=\"col mb-3\">\r\n                \r\n                <Card title=\"Cedarcrest High School\">\r\n                  Graduated at the top of my class with a 4.0 GPA in June 2019. I guess that means I'm a functioning member of society now.\r\n                </Card>\r\n\r\n              </div>\r\n\r\n            </div>\r\n          \r\n          </Block>\r\n        \r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}